{"version":3,"sources":["components/Header/Header.js","components/HomePage/HomePage.js","components/AddInformation/AddInformation.js","components/UpdateInformation/UpdateInformation.js","App.js","redux/InformationReducer.js","index.js"],"names":["Header","className","to","connect","state","informations","dispatch","deleteInformation","id","type","payload","scope","length","map","information","name","email","phone","onClick","addInformation","data","useState","setName","setEmail","setPhone","history","useHistory","onSubmit","e","preventDefault","checkContactEmailExists","filter","checkContactPhoneExists","toast","warning","error","success","push","placeholder","value","onChange","target","updateInformation","useParams","currentInformation","find","parseInt","useEffect","App","exact","path","component","initialState","store","createStore","action","informationFilter","informationUpdate","Object","assign","composeWithDevTools","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.990d0172.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"col-md-12 col-sm bg-info py-2\">\r\n            <nav className=\"navbar bg-info navbar-dark text-center\">\r\n                <Link to={\"/\"} className=\"navbar-brand ml-5 text-center\">\r\n                    React Redux CRUD operation\r\n                </Link>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HomePage = ({ informations, deleteInformation }) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row d-flex flex-column\">\r\n                <Link to=\"/add\" className=\"btn btn-outline-dark my-5 ml-auto \">\r\n                    Add New Information\r\n                </Link>\r\n                <div className=\"col-md-10 col-sm mx-auto my-4\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead className=\"table-header bg-warning text-white\">\r\n                            <tr>\r\n                                <th scope=\"col\">No</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Phone</th>\r\n                                <th scope=\"col\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {informations.length > 0 ? (\r\n                                informations.map((information, id) => (\r\n                                    <tr key={id}>\r\n                                        <td>{id + 1}</td>\r\n                                        <td>{information.name}</td>\r\n                                        <td>{information.email}</td>\r\n                                        <td>{information.phone}</td>\r\n                                        <td>\r\n                                            <Link\r\n                                                to={`/edit/${information.id}`}\r\n                                                className=\"btn btn-sm btn-primary mr-1\"\r\n                                            >\r\n                                                Update\r\n                                            </Link>\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                onClick={() => deleteInformation(information.id)}\r\n                                                className=\"btn btn-sm btn-danger\"\r\n                                            >\r\n                                                Delete\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            ) : (\r\n                                <tr>\r\n                                    <th>No Information found</th>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// export default HomePage;\r\n\r\nconst mapStateToProps = (state) => ({\r\n    informations: state,\r\n}); const mapDispatchToProps = (dispatch) => ({\r\n    deleteInformation: (id) => {\r\n        dispatch({ type: \"DELETE_INFORMATION\", payload: id });\r\n    },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AddInformation = ({ informations, addInformation }) => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const checkContactEmailExists = informations.filter((information) =>\r\n            information.email === email ? information : null\r\n        );\r\n        const checkContactPhoneExists = informations.filter((information) =>\r\n            information.phone === phone ? information : null\r\n        );\r\n\r\n        if (!email || !name || !phone) {\r\n            return toast.warning(\"EMpty field fill please\");\r\n        }\r\n        if (checkContactEmailExists.length > 0) {\r\n            return toast.error(\"EMail taken\");\r\n        }\r\n        if (checkContactPhoneExists.length > 0) {\r\n            return toast.error(\"Wrong Number\");\r\n        }\r\n\r\n        const data = {\r\n            id: informations.length > 0 ? informations[informations.length - 1].id + 1 : 0,\r\n            email,\r\n            name,\r\n            phone,\r\n        };\r\n\r\n        addInformation(data);\r\n        toast.success(\"Added Information Successfully\");\r\n        history.push(\"/\");\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <h1 className=\"text-center text-danger py-3 display-2\">Add Information</h1>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 p-5 mx-auto shadow\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                placeholder=\"Full name\"\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                placeholder=\"Phone\"\r\n                                value={phone}\r\n                                onChange={(e) => setPhone(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                className=\"btn btn-block btn-dark\"\r\n                                type=\"submit\"\r\n                                value=\"Add Information\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// export default AddInformation;\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    informations: state,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addInformation: (data) => {\r\n        dispatch({ type: \"ADD_INFORMATION\", payload: data });\r\n    },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddInformation);","import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst UpdateInformation = ({ informations, updateInformation }) => {\r\n\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const currentInformation = informations.find(\r\n        (information) => information.id === parseInt(id)\r\n    );\r\n\r\n    useEffect(() => {\r\n        setName(currentInformation.name);\r\n        setEmail(currentInformation.email);\r\n        setPhone(currentInformation.phone);\r\n    }, [currentInformation]);\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const checkContactEmailExists = informations.filter((information) =>\r\n            information.email === email && information.id !== currentInformation.id\r\n                ? information\r\n                : null\r\n        );\r\n        const checkContactPhoneExists = informations.filter((information) =>\r\n            information.phone === phone && information.id !== currentInformation.id\r\n                ? information\r\n                : null\r\n        );\r\n\r\n        if (!email || !name || !phone) {\r\n            return toast.warning(\"EMpty Fields please fill\");\r\n        }\r\n        if (checkContactEmailExists.length > 0) {\r\n            return toast.error(\"Email Taken\");\r\n        }\r\n        if (checkContactPhoneExists.length > 0) {\r\n            return toast.error(\"Number Wrong\");\r\n        }\r\n\r\n        const data = {\r\n            id: currentInformation.id,\r\n            email,\r\n            name,\r\n            phone,\r\n        };\r\n\r\n        updateInformation(data);\r\n        toast.success(\"Update Information Successfully\");\r\n        history.push(\"/\");\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row d-flex flex-column\">\r\n                <button\r\n                    className=\"btn btn-dark ml-auto my-5\"\r\n                    onClick={() => history.push(\"/\")}\r\n                >\r\n                    Go back\r\n                </button>\r\n                <div className=\"col-md-6 mx-auto shadow p-5\">\r\n                    {currentInformation ? (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    value={name}\r\n                                    placeholder={\"Name\"}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    value={email}\r\n                                    placeholder={\"Email\"}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    value={phone}\r\n                                    placeholder={\"Phone\"}\r\n                                    onChange={(e) => setPhone(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group d-flex align-items-center justify-content-between my-2\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\">\r\n                                    Update Informations\r\n                                </button>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() => history.push(\"/\")}\r\n                                >\r\n                                    cancel\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    ) : (\r\n                        <h1 className=\"text-center\">No Information Found</h1>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// export default UpdateInformation;\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    informations: state,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    updateInformation: (data) => {\r\n        dispatch({ type: \"UPDATE_INFORMATION\", payload: data });\r\n    },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateInformation);","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\nimport { ToastContainer } from \"react-toastify\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport AddInformation from \"./components/AddInformation/AddInformation\";\nimport UpdateInformation from \"./components/UpdateInformation/UpdateInformation\";\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ToastContainer />\n      <Header></Header>\n      <Route exact path=\"/\" component={() => <HomePage />} />\n      <Route exact path=\"/add\" component={() => <AddInformation />} />\n      <Route exact path=\"/edit/:id\" component={() => <UpdateInformation />} />\n    </div>\n  );\n};\nexport default App;\n","const initialState = [\r\n    { id: 0, name: \"Mustafizur Rahman\", email: \"mustafiz@email.com\", phone: 1234567890 },\r\n    { id: 1, name: \"Rahman2\", email: \"rahman@gmail.com\", phone: 4567891230 },\r\n];\r\n\r\nexport const InformationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_INFORMATION\":\r\n            state = [...state, action.payload];\r\n            return state;\r\n        case \"DELETE_INFORMATION\":\r\n            const informationFilter = state.filter((information) =>\r\n                information.id === action.payload ? null : information\r\n            );\r\n            state = informationFilter;\r\n            return state;\r\n        case \"UPDATE_INFORMATION\":\r\n            const informationUpdate = state.filter((information) =>\r\n                information.id === action.payload.id\r\n                    ? Object.assign(information, action.payload)\r\n                    : information\r\n            );\r\n            state = informationUpdate;\r\n            return state;\r\n        case \"RESET_INFORMATION\":\r\n            state = [{ name: null, email: null, phone: null }];\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { InformationReducer } from \"./redux/InformationReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(InformationReducer, composeWithDevTools());\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store} >\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}